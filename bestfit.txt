#include<stdio.h>

void bestfit(int bn,int pn,int blocksize[10],int processsize[10])
{
    int allocation[pn];

for(int i=0;i<pn;i++)
{
int bestfitIndex=-1;
for(int j=0;j<bn;j++)
{
    if(blocksize[j]>=processsize[i]){
if(bestfitIndex==-1||blocksize[bestfitIndex]>blocksize[j]){
bestfitIndex=j;
}
    }

}
if(bestfitIndex!=-1){
allocation[i]=bestfitIndex;
blocksize[bestfitIndex]-=processsize[i];}
else{

allocation[i]=-1;
}
}


printf("\nprocessnumber\tprocesssize\tblocksize\n");
for(int i=0;i<pn;i++){
printf("%d\t\t%d\t\t",i+1,processsize[i]);
if(allocation[i]!=-1){
printf("%d",allocation[i]+1);}
else{
printf("not allocated");}


printf("\n");
}
}
int main()

{
    int bn,pn;
    printf("enter the number of blocks ");
scanf("%d",&bn);
int blocksize[10];
printf("enter the block sizes");
for(int  i=0;i<bn;i++)

{
    scanf("%d",&blocksize[i]);


}
printf("enter the number of process ");
scanf("%d",&pn);
int processsize[10];
printf("enter the process sizes");
for(int i=0;i<pn;i++)
{


scanf("%d",&processsize[i]);
}
bestfit(bn,pn,blocksize,processsize);

return 0;
}

